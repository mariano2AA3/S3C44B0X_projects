   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"at24C04.c"
  21              	.Ltext0:
  22              		.file 1 "../at24C04.c"
 1022              		.align	2
 1023              		.global	at24c04_bytewrite
 1025              	at24c04_bytewrite:
 1026              	.LFB0:
   1:../at24C04.c  **** #include "at24c04.h"
   2:../at24C04.c  **** #include "iic.h"
   3:../at24C04.c  **** 
   4:../at24C04.c  **** 
   5:../at24C04.c  **** void at24c04_bytewrite( uint16 addr, uint8 data )
   6:../at24C04.c  **** {
 1027              		.loc 1 6 0
 1028              		.cfi_startproc
 1029              		@ Function supports interworking.
 1030              		@ args = 0, pretend = 0, frame = 16
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032 0000 0DC0A0E1 		mov	ip, sp
 1033              	.LCFI0:
 1034              		.cfi_def_cfa_register 12
 1035 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1036 0008 04B04CE2 		sub	fp, ip, #4
 1037              		.cfi_offset 14, -8
 1038              		.cfi_offset 13, -12
 1039              		.cfi_offset 11, -16
 1040              	.LCFI1:
 1041              		.cfi_def_cfa 11, 4
 1042 000c 10D04DE2 		sub	sp, sp, #16
 1043 0010 0020A0E1 		mov	r2, r0
 1044 0014 0130A0E1 		mov	r3, r1
 1045 0018 B6214BE1 		strh	r2, [fp, #-22]	@ movhi
 1046 001c 17304BE5 		strb	r3, [fp, #-23]
   7:../at24C04.c  **** 	uint8 page;
   8:../at24C04.c  **** 	
   9:../at24C04.c  **** 	page = (addr & 0x100) >> 8;	// Extrae el número de página 
 1047              		.loc 1 9 0
 1048 0020 B6315BE1 		ldrh	r3, [fp, #-22]
 1049 0024 013C03E2 		and	r3, r3, #256
 1050 0028 4334A0E1 		mov	r3, r3, asr #8
 1051 002c 0D304BE5 		strb	r3, [fp, #-13]
  10:../at24C04.c  **** 
  11:../at24C04.c  **** 	/*Añadir el prefijo golden_ para usar la versión de test. Ej. golden_iic_putByte_start*/
  12:../at24C04.c  **** 	iic_putByte_start( (AT24C04_ADDRESS << 2) | (page << 1) | AT24C04_WRITE );
 1052              		.loc 1 12 0
 1053 0030 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1054 0034 8330A0E1 		mov	r3, r3, asl #1
 1055 0038 FF3003E2 		and	r3, r3, #255
 1056 003c 0330E0E1 		mvn	r3, r3
 1057 0040 5F3003E2 		and	r3, r3, #95
 1058 0044 0330E0E1 		mvn	r3, r3
 1059 0048 FF3003E2 		and	r3, r3, #255
 1060 004c FF3003E2 		and	r3, r3, #255
 1061 0050 0300A0E1 		mov	r0, r3
 1062 0054 FEFFFFEB 		bl	iic_putByte_start
  13:../at24C04.c  **** 	iic_putByte( addr & 0xFF );
 1063              		.loc 1 13 0
 1064 0058 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 1065 005c FF3003E2 		and	r3, r3, #255
 1066 0060 0300A0E1 		mov	r0, r3
 1067 0064 FEFFFFEB 		bl	iic_putByte
  14:../at24C04.c  **** 	iic_putByte_stop( data );
 1068              		.loc 1 14 0
 1069 0068 17305BE5 		ldrb	r3, [fp, #-23]	@ zero_extendqisi2
 1070 006c 0300A0E1 		mov	r0, r3
 1071 0070 FEFFFFEB 		bl	iic_putByte_stop
  15:../at24C04.c  **** }
 1072              		.loc 1 15 0
 1073 0074 0CD04BE2 		sub	sp, fp, #12
 1074 0078 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1075 007c 1EFF2FE1 		bx	lr
 1076              		.cfi_endproc
 1077              	.LFE0:
 1079              		.align	2
 1080              		.global	at24c04_byteread
 1082              	at24c04_byteread:
 1083              	.LFB1:
  16:../at24C04.c  **** 	
  17:../at24C04.c  **** void at24c04_byteread( uint16 addr, uint8 *data )
  18:../at24C04.c  **** {
 1084              		.loc 1 18 0
 1085              		.cfi_startproc
 1086              		@ Function supports interworking.
 1087              		@ args = 0, pretend = 0, frame = 16
 1088              		@ frame_needed = 1, uses_anonymous_args = 0
 1089 0080 0DC0A0E1 		mov	ip, sp
 1090              	.LCFI2:
 1091              		.cfi_def_cfa_register 12
 1092 0084 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1093 0088 04B04CE2 		sub	fp, ip, #4
 1094              		.cfi_offset 14, -8
 1095              		.cfi_offset 13, -12
 1096              		.cfi_offset 11, -16
 1097              	.LCFI3:
 1098              		.cfi_def_cfa 11, 4
 1099 008c 10D04DE2 		sub	sp, sp, #16
 1100 0090 0030A0E1 		mov	r3, r0
 1101 0094 1C100BE5 		str	r1, [fp, #-28]
 1102 0098 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
  19:../at24C04.c  **** 	uint8 page;
  20:../at24C04.c  **** 	
  21:../at24C04.c  **** 	page = (addr & 0x100) >> 8;	// Extrae el número de página 
 1103              		.loc 1 21 0
 1104 009c B6315BE1 		ldrh	r3, [fp, #-22]
 1105 00a0 013C03E2 		and	r3, r3, #256
 1106 00a4 4334A0E1 		mov	r3, r3, asr #8
 1107 00a8 0D304BE5 		strb	r3, [fp, #-13]
  22:../at24C04.c  **** 	
  23:../at24C04.c  **** 	iic_putByte_start( (AT24C04_ADDRESS << 2) | (page << 1) | AT24C04_WRITE );  // Lleva el contador d
 1108              		.loc 1 23 0
 1109 00ac 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1110 00b0 8330A0E1 		mov	r3, r3, asl #1
 1111 00b4 FF3003E2 		and	r3, r3, #255
 1112 00b8 0330E0E1 		mvn	r3, r3
 1113 00bc 5F3003E2 		and	r3, r3, #95
 1114 00c0 0330E0E1 		mvn	r3, r3
 1115 00c4 FF3003E2 		and	r3, r3, #255
 1116 00c8 FF3003E2 		and	r3, r3, #255
 1117 00cc 0300A0E1 		mov	r0, r3
 1118 00d0 FEFFFFEB 		bl	iic_putByte_start
  24:../at24C04.c  **** 	iic_putByte( addr & 0xFF );
 1119              		.loc 1 24 0
 1120 00d4 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 1121 00d8 FF3003E2 		and	r3, r3, #255
 1122 00dc 0300A0E1 		mov	r0, r3
 1123 00e0 FEFFFFEB 		bl	iic_putByte
  25:../at24C04.c  **** 	iic_getByte_start( (AT24C04_ADDRESS << 2) | (page << 1) | AT24C04_READ );
 1124              		.loc 1 25 0
 1125 00e4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1126 00e8 8330A0E1 		mov	r3, r3, asl #1
 1127 00ec FF3003E2 		and	r3, r3, #255
 1128 00f0 0330E0E1 		mvn	r3, r3
 1129 00f4 5E3003E2 		and	r3, r3, #94
 1130 00f8 0330E0E1 		mvn	r3, r3
 1131 00fc FF3003E2 		and	r3, r3, #255
 1132 0100 FF3003E2 		and	r3, r3, #255
 1133 0104 0300A0E1 		mov	r0, r3
 1134 0108 FEFFFFEB 		bl	iic_getByte_start
  26:../at24C04.c  **** 	*data = iic_getByte_stop( NO_RxACK ); 								// En una EEPROM, no debe generarse ACK tras el últi
 1135              		.loc 1 26 0
 1136 010c 0000A0E3 		mov	r0, #0
 1137 0110 FEFFFFEB 		bl	iic_getByte_stop
 1138 0114 0030A0E1 		mov	r3, r0
 1139 0118 0320A0E1 		mov	r2, r3
 1140 011c 1C301BE5 		ldr	r3, [fp, #-28]
 1141 0120 0020C3E5 		strb	r2, [r3, #0]
  27:../at24C04.c  **** }
 1142              		.loc 1 27 0
 1143 0124 0CD04BE2 		sub	sp, fp, #12
 1144 0128 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1145 012c 1EFF2FE1 		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE1:
 1149              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 at24C04.c
C:\Users\USUARI~1\AppData\Local\Temp\ccgqCUKO.s:1022   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccgqCUKO.s:1025   .text:00000000 at24c04_bytewrite
C:\Users\USUARI~1\AppData\Local\Temp\ccgqCUKO.s:1082   .text:00000080 at24c04_byteread
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
iic_putByte_start
iic_putByte
iic_putByte_stop
iic_getByte_start
iic_getByte_stop
