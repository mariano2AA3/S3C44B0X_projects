   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1955              		.align	2
 1958              	keyboard_base:
 1959 0000 00000006 		.word	100663296
 1960              		.comm	key,4,4
 1961              		.text
 1962              		.align	2
 1963              		.global	keyboard_init
 1965              	keyboard_init:
 1966              	.LFB0:
   1:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   2:../keyboard.c **** #include "44b.h"
   3:../keyboard.c **** #include "44blib.h"
   4:../keyboard.c **** #include "def.h"
   5:../keyboard.c **** /*--- Definición de macros ---*/
   6:../keyboard.c **** #define KEY_VALUE_MASK 0xF
   7:../keyboard.c **** /*--- Variables globales ---*/
   8:../keyboard.c **** volatile UCHAR *keyboard_base = (UCHAR *)0x06000000;
   9:../keyboard.c **** int key;
  10:../keyboard.c **** /*--- Funciones externas ---*/
  11:../keyboard.c **** void D8Led_symbol(int value);
  12:../keyboard.c **** /*--- Declaracion de funciones ---*/
  13:../keyboard.c **** void keyboard_init();
  14:../keyboard.c **** void KeyboardInt(void) __attribute__ ((interrupt ("IRQ")));
  15:../keyboard.c **** /*--- Codigo de las funciones ---*/
  16:../keyboard.c **** 
  17:../keyboard.c **** void keyboard_init() {
 1967              		.loc 1 17 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI0:
 1974              		.cfi_def_cfa_register 12
 1975 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 0008 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI1:
 1981              		.cfi_def_cfa 11, 4
  18:../keyboard.c **** 	/* Configurar el puerto G (si no lo estuviese ya) */	
  19:../keyboard.c **** 
  20:../keyboard.c **** 		// Establece la funcion de los pines (EINT0-7)
  21:../keyboard.c **** 		rPCONG = 0xffff;
 1982              		.loc 1 21 0
 1983 000c 78309FE5 		ldr	r3, .L2
 1984 0010 78209FE5 		ldr	r2, .L2+4
 1985 0014 002083E5 		str	r2, [r3, #0]
  22:../keyboard.c **** 
  23:../keyboard.c **** 		// Habilita el "pull up" del puerto
  24:../keyboard.c **** 		rPUPG = 0;
 1986              		.loc 1 24 0
 1987 0018 74309FE5 		ldr	r3, .L2+8
 1988 001c 0020A0E3 		mov	r2, #0
 1989 0020 002083E5 		str	r2, [r3, #0]
  25:../keyboard.c **** 
  26:../keyboard.c **** 		// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  27:../keyboard.c **** 		rEXTINT = 0x33333333;
 1990              		.loc 1 27 0
 1991 0024 6C309FE5 		ldr	r3, .L2+12
 1992 0028 6C209FE5 		ldr	r2, .L2+16
 1993 002c 002083E5 		str	r2, [r3, #0]
  28:../keyboard.c **** 
  29:../keyboard.c **** 	/* Establece la rutina de servicio para EINT1 */
  30:../keyboard.c **** 		pISR_EINT1 = (unsigned) KeyboardInt;
 1994              		.loc 1 30 0
 1995 0030 68309FE5 		ldr	r3, .L2+20
 1996 0034 68209FE5 		ldr	r2, .L2+24
 1997 0038 002083E5 		str	r2, [r3, #0]
  31:../keyboard.c **** 
  32:../keyboard.c **** 	/* Configurar controlador de interrupciones */
  33:../keyboard.c **** 
  34:../keyboard.c **** 		// Borra INTPND escribiendo 1s en I_ISPC
  35:../keyboard.c **** 		rI_ISPC = BIT_EINT1;
 1998              		.loc 1 35 0
 1999 003c 64309FE5 		ldr	r3, .L2+28
 2000 0040 0124A0E3 		mov	r2, #16777216
 2001 0044 002083E5 		str	r2, [r3, #0]
  36:../keyboard.c **** 
  37:../keyboard.c **** 		// Configura las lineas como de tipo IRQ mediante INTMOD
  38:../keyboard.c **** 		rINTMOD = 0x0;
 2002              		.loc 1 38 0
 2003 0048 5C309FE5 		ldr	r3, .L2+32
 2004 004c 0020A0E3 		mov	r2, #0
 2005 0050 002083E5 		str	r2, [r3, #0]
  39:../keyboard.c **** 
  40:../keyboard.c **** 		// Habilita int. vectorizadas y la linea IRQ (FIQ no) mediante INTCON
  41:../keyboard.c **** 		rINTCON = 0x1;
 2006              		.loc 1 41 0
 2007 0054 1E36A0E3 		mov	r3, #31457280
 2008 0058 0120A0E3 		mov	r2, #1
 2009 005c 002083E5 		str	r2, [r3, #0]
  42:../keyboard.c **** 
  43:../keyboard.c **** 	/* Habilitar linea EINT1 */
  44:../keyboard.c **** 	rINTMSK = rINTMSK & ~(BIT_EINT1);
 2010              		.loc 1 44 0
 2011 0060 48309FE5 		ldr	r3, .L2+36
 2012 0064 44209FE5 		ldr	r2, .L2+36
 2013 0068 002092E5 		ldr	r2, [r2, #0]
 2014 006c 0124C2E3 		bic	r2, r2, #16777216
 2015 0070 002083E5 		str	r2, [r3, #0]
  45:../keyboard.c **** 
  46:../keyboard.c **** 	/* Por precaucion, se vuelven a borrar los bits de INTPND correspondientes*/
  47:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2016              		.loc 1 47 0
 2017 0074 2C309FE5 		ldr	r3, .L2+28
 2018 0078 0124A0E3 		mov	r2, #16777216
 2019 007c 002083E5 		str	r2, [r3, #0]
  48:../keyboard.c **** }
 2020              		.loc 1 48 0
 2021 0080 0CD04BE2 		sub	sp, fp, #12
 2022 0084 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2023 0088 1EFF2FE1 		bx	lr
 2024              	.L3:
 2025              		.align	2
 2026              	.L2:
 2027 008c 4000D201 		.word	30539840
 2028 0090 FFFF0000 		.word	65535
 2029 0094 4800D201 		.word	30539848
 2030 0098 5000D201 		.word	30539856
 2031 009c 33333333 		.word	858993459
 2032 00a0 80FF7F0C 		.word	209715072
 2033 00a4 00000000 		.word	KeyboardInt
 2034 00a8 2400E001 		.word	31457316
 2035 00ac 0800E001 		.word	31457288
 2036 00b0 0C00E001 		.word	31457292
 2037              		.cfi_endproc
 2038              	.LFE0:
 2040              		.align	2
 2041              		.global	KeyboardInt
 2043              	KeyboardInt:
 2044              	.LFB1:
  49:../keyboard.c **** 
  50:../keyboard.c **** void KeyboardInt(void) {
 2045              		.loc 1 50 0
 2046              		.cfi_startproc
 2047              		@ Interrupt Service Routine.
 2048              		@ args = 0, pretend = 0, frame = 8
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 00b4 04C02DE5 		str	ip, [sp, #-4]!
 2051 00b8 0DC0A0E1 		mov	ip, sp
 2052              	.LCFI2:
 2053              		.cfi_def_cfa_register 12
 2054 00bc 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2055 00c0 04B04CE2 		sub	fp, ip, #4
 2056              		.cfi_offset 14, -8
 2057              		.cfi_offset 13, -12
 2058              		.cfi_offset 11, -16
 2059              		.cfi_offset 3, -20
 2060              		.cfi_offset 2, -24
 2061              		.cfi_offset 1, -28
 2062              		.cfi_offset 0, -32
 2063              	.LCFI3:
 2064              		.cfi_def_cfa 11, 4
 2065 00c4 08D04DE2 		sub	sp, sp, #8
  51:../keyboard.c **** 
  52:../keyboard.c **** 	/* Esperar trp mediante la funcion DelayMs() */
  53:../keyboard.c **** 	DelayMs(20);
 2066              		.loc 1 53 0
 2067 00c8 1400A0E3 		mov	r0, #20
 2068 00cc FEFFFFEB 		bl	DelayMs
  54:../keyboard.c **** 
  55:../keyboard.c **** 	/* Identificar la tecla */
  56:../keyboard.c **** 	int key = key_read();
 2069              		.loc 1 56 0
 2070 00d0 FEFFFFEB 		bl	key_read
 2071 00d4 20000BE5 		str	r0, [fp, #-32]
  57:../keyboard.c **** 
  58:../keyboard.c **** 
  59:../keyboard.c **** 	/* Si la tecla se ha identificado, visualizarla en el 8SEG */
  60:../keyboard.c **** 	if(key > -1) {
 2072              		.loc 1 60 0
 2073 00d8 20301BE5 		ldr	r3, [fp, #-32]
 2074 00dc 000053E3 		cmp	r3, #0
 2075 00e0 020000BA 		blt	.L7
  61:../keyboard.c **** 		D8Led_symbol(key);
 2076              		.loc 1 61 0
 2077 00e4 20001BE5 		ldr	r0, [fp, #-32]
 2078 00e8 FEFFFFEB 		bl	D8Led_symbol
  62:../keyboard.c **** 	}
  63:../keyboard.c **** 	/* Esperar a se libere la tecla: consultar bit 1 del registro de datos del puerto G */
  64:../keyboard.c **** 	while ( (rPDATG & 0x00000002) == 0 ){
 2079              		.loc 1 64 0
 2080 00ec 000000EA 		b	.L6
 2081              	.L7:
 2082 00f0 0000A0E1 		mov	r0, r0	@ nop
 2083              	.L6:
 2084              		.loc 1 64 0 is_stmt 0 discriminator 1
 2085 00f4 30309FE5 		ldr	r3, .L8
 2086 00f8 003093E5 		ldr	r3, [r3, #0]
 2087 00fc 023003E2 		and	r3, r3, #2
 2088 0100 000053E3 		cmp	r3, #0
 2089 0104 FAFFFF0A 		beq	.L6
  65:../keyboard.c **** 		//NOTHING
  66:../keyboard.c **** 	}
  67:../keyboard.c **** 
  68:../keyboard.c **** 	/* Esperar trd mediante la funcion Delay() */
  69:../keyboard.c **** 	DelayMs(100);
 2090              		.loc 1 69 0 is_stmt 1
 2091 0108 6400A0E3 		mov	r0, #100
 2092 010c FEFFFFEB 		bl	DelayMs
  70:../keyboard.c **** 
  71:../keyboard.c **** 	/* Borrar interrupción de teclado */
  72:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2093              		.loc 1 72 0
 2094 0110 18309FE5 		ldr	r3, .L8+4
 2095 0114 0124A0E3 		mov	r2, #16777216
 2096 0118 002083E5 		str	r2, [r3, #0]
  73:../keyboard.c **** 
  74:../keyboard.c **** }
 2097              		.loc 1 74 0
 2098 011c 1CD04BE2 		sub	sp, fp, #28
 2099 0120 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2100 0124 04C09DE4 		ldmfd	sp!, {ip}
 2101 0128 04F05EE2 		subs	pc, lr, #4
 2102              	.L9:
 2103              		.align	2
 2104              	.L8:
 2105 012c 4400D201 		.word	30539844
 2106 0130 2400E001 		.word	31457316
 2107              		.cfi_endproc
 2108              	.LFE1:
 2110              		.align	2
 2111              		.global	key_read
 2113              	key_read:
 2114              	.LFB2:
  75:../keyboard.c **** int key_read() {
 2115              		.loc 1 75 0
 2116              		.cfi_startproc
 2117              		@ Function supports interworking.
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0134 0DC0A0E1 		mov	ip, sp
 2121              	.LCFI4:
 2122              		.cfi_def_cfa_register 12
 2123 0138 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2124 013c 04B04CE2 		sub	fp, ip, #4
 2125              		.cfi_offset 14, -8
 2126              		.cfi_offset 13, -12
 2127              		.cfi_offset 11, -16
 2128              	.LCFI5:
 2129              		.cfi_def_cfa 11, 4
 2130 0140 10D04DE2 		sub	sp, sp, #16
  76:../keyboard.c **** 
  77:../keyboard.c **** 	int value= -1;
 2131              		.loc 1 77 0
 2132 0144 0030E0E3 		mvn	r3, #0
 2133 0148 10300BE5 		str	r3, [fp, #-16]
  78:../keyboard.c **** 	char temp;
  79:../keyboard.c **** 
  80:../keyboard.c **** 	UCHAR values[] = {0xfd, 0xfb, 0xf7, 0xef};
 2134              		.loc 1 80 0
 2135 014c 18319FE5 		ldr	r3, .L19
 2136 0150 003093E5 		ldr	r3, [r3, #0]
 2137 0154 1C300BE5 		str	r3, [fp, #-28]
  81:../keyboard.c **** 
  82:../keyboard.c **** 	int i;
  83:../keyboard.c **** 	for(i=0;i<4;i++) {
 2138              		.loc 1 83 0
 2139 0158 0030A0E3 		mov	r3, #0
 2140 015c 14300BE5 		str	r3, [fp, #-20]
 2141 0160 390000EA 		b	.L11
 2142              	.L18:
  84:../keyboard.c **** 
  85:../keyboard.c **** 		temp = *(keyboard_base + values[i]) & KEY_VALUE_MASK;
 2143              		.loc 1 85 0
 2144 0164 04319FE5 		ldr	r3, .L19+4
 2145 0168 002093E5 		ldr	r2, [r3, #0]
 2146 016c 0F30E0E3 		mvn	r3, #15
 2147 0170 14101BE5 		ldr	r1, [fp, #-20]
 2148 0174 0C004BE2 		sub	r0, fp, #12
 2149 0178 011080E0 		add	r1, r0, r1
 2150 017c 033081E0 		add	r3, r1, r3
 2151 0180 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2152 0184 033082E0 		add	r3, r2, r3
 2153 0188 0030D3E5 		ldrb	r3, [r3, #0]
 2154 018c FF3003E2 		and	r3, r3, #255
 2155 0190 0F3003E2 		and	r3, r3, #15
 2156 0194 15304BE5 		strb	r3, [fp, #-21]
  86:../keyboard.c **** 		switch (temp) {
 2157              		.loc 1 86 0
 2158 0198 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2159 019c 073043E2 		sub	r3, r3, #7
 2160 01a0 070053E3 		cmp	r3, #7
 2161 01a4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2162 01a8 240000EA 		b	.L12
 2163              	.L17:
 2164 01ac CC010000 		.word	.L13
 2165 01b0 40020000 		.word	.L12
 2166 01b4 40020000 		.word	.L12
 2167 01b8 40020000 		.word	.L12
 2168 01bc E0010000 		.word	.L14
 2169 01c0 40020000 		.word	.L12
 2170 01c4 00020000 		.word	.L15
 2171 01c8 20020000 		.word	.L16
 2172              	.L13:
  87:../keyboard.c **** 			case 0x7:  value = 12-i*4; break;
 2173              		.loc 1 87 0
 2174 01cc 14301BE5 		ldr	r3, [fp, #-20]
 2175 01d0 033063E2 		rsb	r3, r3, #3
 2176 01d4 0331A0E1 		mov	r3, r3, asl #2
 2177 01d8 10300BE5 		str	r3, [fp, #-16]
 2178 01dc 170000EA 		b	.L12
 2179              	.L14:
  88:../keyboard.c **** 			case 0xB:  value = 13-i*4; break;
 2180              		.loc 1 88 0
 2181 01e0 14201BE5 		ldr	r2, [fp, #-20]
 2182 01e4 0230A0E1 		mov	r3, r2
 2183 01e8 033FA0E1 		mov	r3, r3, asl #30
 2184 01ec 033062E0 		rsb	r3, r2, r3
 2185 01f0 0331A0E1 		mov	r3, r3, asl #2
 2186 01f4 0D3083E2 		add	r3, r3, #13
 2187 01f8 10300BE5 		str	r3, [fp, #-16]
 2188 01fc 0F0000EA 		b	.L12
 2189              	.L15:
  89:../keyboard.c **** 			case 0xD:  value = 14-i*4; break;
 2190              		.loc 1 89 0
 2191 0200 14201BE5 		ldr	r2, [fp, #-20]
 2192 0204 0230A0E1 		mov	r3, r2
 2193 0208 033FA0E1 		mov	r3, r3, asl #30
 2194 020c 033062E0 		rsb	r3, r2, r3
 2195 0210 0331A0E1 		mov	r3, r3, asl #2
 2196 0214 0E3083E2 		add	r3, r3, #14
 2197 0218 10300BE5 		str	r3, [fp, #-16]
 2198 021c 070000EA 		b	.L12
 2199              	.L16:
  90:../keyboard.c **** 			case 0xE:  value = 15-i*4; break;
 2200              		.loc 1 90 0
 2201 0220 14201BE5 		ldr	r2, [fp, #-20]
 2202 0224 0230A0E1 		mov	r3, r2
 2203 0228 033FA0E1 		mov	r3, r3, asl #30
 2204 022c 033062E0 		rsb	r3, r2, r3
 2205 0230 0331A0E1 		mov	r3, r3, asl #2
 2206 0234 0F3083E2 		add	r3, r3, #15
 2207 0238 10300BE5 		str	r3, [fp, #-16]
 2208 023c 0000A0E1 		mov	r0, r0	@ nop
 2209              	.L12:
  83:../keyboard.c **** 	for(i=0;i<4;i++) {
 2210              		.loc 1 83 0
 2211 0240 14301BE5 		ldr	r3, [fp, #-20]
 2212 0244 013083E2 		add	r3, r3, #1
 2213 0248 14300BE5 		str	r3, [fp, #-20]
 2214              	.L11:
  83:../keyboard.c **** 	for(i=0;i<4;i++) {
 2215              		.loc 1 83 0 is_stmt 0 discriminator 1
 2216 024c 14301BE5 		ldr	r3, [fp, #-20]
 2217 0250 030053E3 		cmp	r3, #3
 2218 0254 C2FFFFDA 		ble	.L18
  91:../keyboard.c **** 		}
  92:../keyboard.c **** 
  93:../keyboard.c **** 	}
  94:../keyboard.c **** 	
  95:../keyboard.c **** 
  96:../keyboard.c **** 	return value;
 2219              		.loc 1 96 0 is_stmt 1
 2220 0258 10301BE5 		ldr	r3, [fp, #-16]
  97:../keyboard.c **** 
  98:../keyboard.c **** }
 2221              		.loc 1 98 0
 2222 025c 0300A0E1 		mov	r0, r3
 2223 0260 0CD04BE2 		sub	sp, fp, #12
 2224 0264 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2225 0268 1EFF2FE1 		bx	lr
 2226              	.L20:
 2227              		.align	2
 2228              	.L19:
 2229 026c 00000000 		.word	C.0.4719
 2230 0270 00000000 		.word	keyboard_base
 2231              		.cfi_endproc
 2232              	.LFE2:
 2234              		.section	.rodata
 2235              		.align	2
 2238              	C.0.4719:
 2239 0000 FD       		.byte	-3
 2240 0001 FB       		.byte	-5
 2241 0002 F7       		.byte	-9
 2242 0003 EF       		.byte	-17
 2243              		.text
 2244              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:1958   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:1955   .data:00000000 $d
                            *COM*:00000004 key
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:1962   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:1965   .text:00000000 keyboard_init
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2027   .text:0000008c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2043   .text:000000b4 KeyboardInt
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2040   .text:000000b4 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2113   .text:00000134 key_read
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2105   .text:0000012c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2110   .text:00000134 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2164   .text:000001ac $d
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2174   .text:000001cc $a
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2229   .text:0000026c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2238   .rodata:00000000 C.0.4719
C:\Users\USUARI~1\AppData\Local\Temp\ccQ8Yx3I.s:2235   .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
D8Led_symbol
