   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"button.c"
  21              	.Ltext0:
  22              		.file 1 "../button.c"
 2020              		.align	2
 2023              	symbol:
 2024 0000 00000000 		.space	4
 2025              		.text
 2026              		.align	2
 2027              		.global	Eint4567_init
 2029              	Eint4567_init:
 2030              	.LFB0:
   1:../button.c   **** /*--- ficheros de cabecera ---*/
   2:../button.c   **** #include "44blib.h"
   3:../button.c   **** #include "44b.h"
   4:../button.c   **** #include "def.h"
   5:../button.c   **** #include "uart.h"
   6:../button.c   **** /*--- variables globales ---*/
   7:../button.c   **** int symbol = 0;
   8:../button.c   **** 
   9:../button.c   **** /*--- funciones externas ---*/
  10:../button.c   **** extern void D8Led_symbol(int value);
  11:../button.c   **** /*--- declaracion de funciones ---*/
  12:../button.c   **** void Eint4567_ISR(void) __attribute__ ((interrupt ("IRQ")));
  13:../button.c   **** void Eint4567_init(void);
  14:../button.c   **** 
  15:../button.c   **** 
  16:../button.c   **** //char str_send_iz[2] = "1\0";
  17:../button.c   **** //char str_send_dr[2] = "2\0";
  18:../button.c   **** //char str[256];
  19:../button.c   **** 
  20:../button.c   **** 
  21:../button.c   **** 
  22:../button.c   **** /*--- codigo de funciones ---*/
  23:../button.c   **** void Eint4567_init(void) {
 2031              		.loc 1 23 0
 2032              		.cfi_startproc
 2033              		@ Function supports interworking.
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 1, uses_anonymous_args = 0
 2036 0000 0DC0A0E1 		mov	ip, sp
 2037              	.LCFI0:
 2038              		.cfi_def_cfa_register 12
 2039 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2040 0008 04B04CE2 		sub	fp, ip, #4
 2041              		.cfi_offset 14, -8
 2042              		.cfi_offset 13, -12
 2043              		.cfi_offset 11, -16
 2044              	.LCFI1:
 2045              		.cfi_def_cfa 11, 4
  24:../button.c   **** 
  25:../button.c   **** /* Configuracion del controlador de interrupciones */
  26:../button.c   **** 
  27:../button.c   **** 	// Borra EXTINTPND escribiendo 1s en el propio registro
  28:../button.c   **** 	rEXTINTPND = 0xf;
 2046              		.loc 1 28 0
 2047 000c 88309FE5 		ldr	r3, .L2
 2048 0010 0F20A0E3 		mov	r2, #15
 2049 0014 002083E5 		str	r2, [r3, #0]
  29:../button.c   **** 
  30:../button.c   **** 	// Borra INTPND escribiendo 1s en I_ISPC
  31:../button.c   **** 	rI_ISPC = 0xfffffff;
 2050              		.loc 1 31 0
 2051 0018 80309FE5 		ldr	r3, .L2+4
 2052 001c 0F22E0E3 		mvn	r2, #-268435456
 2053 0020 002083E5 		str	r2, [r3, #0]
  32:../button.c   **** 
  33:../button.c   **** 	// Configura las lineas como de tipo IRQ mediante INTMOD
  34:../button.c   **** 	rINTMOD = 0x0000000;
 2054              		.loc 1 34 0
 2055 0024 78309FE5 		ldr	r3, .L2+8
 2056 0028 0020A0E3 		mov	r2, #0
 2057 002c 002083E5 		str	r2, [r3, #0]
  35:../button.c   **** 
  36:../button.c   **** 	// Habilita int. vectorizadas y la linea IRQ (FIQ no) mediante INTCON
  37:../button.c   **** 	rINTCON = 0x1;
 2058              		.loc 1 37 0
 2059 0030 1E36A0E3 		mov	r3, #31457280
 2060 0034 0120A0E3 		mov	r2, #1
 2061 0038 002083E5 		str	r2, [r3, #0]
  38:../button.c   **** 
  39:../button.c   **** 	// Enmascara todas las lineas excepto Eint4567 y el bit global (INTMSK)
  40:../button.c   **** 	rINTMSK = 0xffffffff & ~BIT_GLOBAL & ~BIT_EINT4567;
 2062              		.loc 1 40 0
 2063 003c 64309FE5 		ldr	r3, .L2+12
 2064 0040 4226E0E3 		mvn	r2, #69206016
 2065 0044 002083E5 		str	r2, [r3, #0]
  41:../button.c   **** 
  42:../button.c   **** 	// Establecer la rutina de servicio para Eint4567
  43:../button.c   **** 	pISR_EINT4567 = (unsigned) Eint4567_ISR;
 2066              		.loc 1 43 0
 2067 0048 5C309FE5 		ldr	r3, .L2+16
 2068 004c 5C209FE5 		ldr	r2, .L2+20
 2069 0050 002083E5 		str	r2, [r3, #0]
  44:../button.c   **** 
  45:../button.c   **** /* Configuracion del puerto G */
  46:../button.c   **** 	// Establece la funcion de los pines (EINT7-EINT0)
  47:../button.c   **** 	// Bits 6 y 7 a 0, resto a 1´s
  48:../button.c   **** 	rPCONG = 0xff3f;
 2070              		.loc 1 48 0
 2071 0054 58309FE5 		ldr	r3, .L2+24
 2072 0058 58209FE5 		ldr	r2, .L2+28
 2073 005c 002083E5 		str	r2, [r3, #0]
  49:../button.c   **** 
  50:../button.c   **** 	//Habilita las resistencias de pull-up
  51:../button.c   **** 	rPUPG = 0;
 2074              		.loc 1 51 0
 2075 0060 54309FE5 		ldr	r3, .L2+32
 2076 0064 0020A0E3 		mov	r2, #0
 2077 0068 002083E5 		str	r2, [r3, #0]
  52:../button.c   **** 
  53:../button.c   **** 	// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  54:../button.c   **** 	// _01x_01x_01x_01x_01x_01x_01x_01x ; x,_ = doesnt care
  55:../button.c   **** 	rEXTINT = 0x33333333;
 2078              		.loc 1 55 0
 2079 006c 4C309FE5 		ldr	r3, .L2+36
 2080 0070 4C209FE5 		ldr	r2, .L2+40
 2081 0074 002083E5 		str	r2, [r3, #0]
  56:../button.c   **** 
  57:../button.c   **** /* Por precaucion, se vuelven a borrar los bits de INTPND y EXTINTPND */
  58:../button.c   **** 	rEXTINTPND = 0xf;
 2082              		.loc 1 58 0
 2083 0078 1C309FE5 		ldr	r3, .L2
 2084 007c 0F20A0E3 		mov	r2, #15
 2085 0080 002083E5 		str	r2, [r3, #0]
  59:../button.c   **** 	rI_ISPC = 0xfffffff;
 2086              		.loc 1 59 0
 2087 0084 14309FE5 		ldr	r3, .L2+4
 2088 0088 0F22E0E3 		mvn	r2, #-268435456
 2089 008c 002083E5 		str	r2, [r3, #0]
  60:../button.c   **** }
 2090              		.loc 1 60 0
 2091 0090 0CD04BE2 		sub	sp, fp, #12
 2092 0094 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2093 0098 1EFF2FE1 		bx	lr
 2094              	.L3:
 2095              		.align	2
 2096              	.L2:
 2097 009c 5400D201 		.word	30539860
 2098 00a0 2400E001 		.word	31457316
 2099 00a4 0800E001 		.word	31457288
 2100 00a8 0C00E001 		.word	31457292
 2101 00ac 74FF7F0C 		.word	209715060
 2102 00b0 00000000 		.word	Eint4567_ISR
 2103 00b4 4000D201 		.word	30539840
 2104 00b8 3FFF0000 		.word	65343
 2105 00bc 4800D201 		.word	30539848
 2106 00c0 5000D201 		.word	30539856
 2107 00c4 33333333 		.word	858993459
 2108              		.cfi_endproc
 2109              	.LFE0:
 2111              		.align	2
 2112              		.global	Eint4567_ISR
 2114              	Eint4567_ISR:
 2115              	.LFB1:
  61:../button.c   **** 
  62:../button.c   **** 
  63:../button.c   **** void Eint4567_ISR(void) {
 2116              		.loc 1 63 0
 2117              		.cfi_startproc
 2118              		@ Interrupt Service Routine.
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 1, uses_anonymous_args = 0
 2121 00c8 04C02DE5 		str	ip, [sp, #-4]!
 2122 00cc 0DC0A0E1 		mov	ip, sp
 2123              	.LCFI2:
 2124              		.cfi_def_cfa_register 12
 2125 00d0 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2126 00d4 04B04CE2 		sub	fp, ip, #4
 2127              		.cfi_offset 14, -8
 2128              		.cfi_offset 13, -12
 2129              		.cfi_offset 11, -16
 2130              		.cfi_offset 3, -20
 2131              		.cfi_offset 2, -24
 2132              		.cfi_offset 1, -28
 2133              		.cfi_offset 0, -32
 2134              	.LCFI3:
 2135              		.cfi_def_cfa 11, 4
  64:../button.c   **** 
  65:../button.c   **** 
  66:../button.c   **** 
  67:../button.c   **** 	//Delay para eliminar rebotes
  68:../button.c   **** 	DelayMs(100);
 2136              		.loc 1 68 0
 2137 00d8 6400A0E3 		mov	r0, #100
 2138 00dc FEFFFFEB 		bl	DelayMs
  69:../button.c   **** 
  70:../button.c   **** 	// IZQ
  71:../button.c   **** 	if ( (rPDATG & 0x00000040) == 0 ) {
 2139              		.loc 1 71 0
 2140 00e0 8C309FE5 		ldr	r3, .L9
 2141 00e4 003093E5 		ldr	r3, [r3, #0]
 2142 00e8 403003E2 		and	r3, r3, #64
 2143 00ec 000053E3 		cmp	r3, #0
 2144 00f0 0200001A 		bne	.L5
  72:../button.c   **** 		Uart1_SendByte(CR_LEFT);
 2145              		.loc 1 72 0
 2146 00f4 4C00A0E3 		mov	r0, #76
 2147 00f8 FEFFFFEB 		bl	Uart1_SendByte
  73:../button.c   **** 	}
  74:../button.c   **** 	// DR
  75:../button.c   **** 	else if ( (rPDATG & 0x00000080) == 0 ) {
  76:../button.c   **** 		Uart1_SendByte(CR_RIGHT);
  77:../button.c   **** 	}
  78:../button.c   **** 
  79:../button.c   **** 	while ( (rPDATG & 0x00000040) == 0 || (rPDATG & 0x00000080) == 0) {}
 2148              		.loc 1 79 0
 2149 00fc 080000EA 		b	.L7
 2150              	.L5:
  75:../button.c   **** 	else if ( (rPDATG & 0x00000080) == 0 ) {
 2151              		.loc 1 75 0
 2152 0100 6C309FE5 		ldr	r3, .L9
 2153 0104 003093E5 		ldr	r3, [r3, #0]
 2154 0108 803003E2 		and	r3, r3, #128
 2155 010c 000053E3 		cmp	r3, #0
 2156 0110 0200001A 		bne	.L8
  76:../button.c   **** 		Uart1_SendByte(CR_RIGHT);
 2157              		.loc 1 76 0
 2158 0114 5200A0E3 		mov	r0, #82
 2159 0118 FEFFFFEB 		bl	Uart1_SendByte
 2160              		.loc 1 79 0
 2161 011c 000000EA 		b	.L7
 2162              	.L8:
 2163 0120 0000A0E1 		mov	r0, r0	@ nop
 2164              	.L7:
 2165              		.loc 1 79 0 is_stmt 0 discriminator 1
 2166 0124 48309FE5 		ldr	r3, .L9
 2167 0128 003093E5 		ldr	r3, [r3, #0]
 2168 012c 403003E2 		and	r3, r3, #64
 2169 0130 000053E3 		cmp	r3, #0
 2170 0134 FAFFFF0A 		beq	.L7
 2171              		.loc 1 79 0 discriminator 2
 2172 0138 34309FE5 		ldr	r3, .L9
 2173 013c 003093E5 		ldr	r3, [r3, #0]
 2174 0140 803003E2 		and	r3, r3, #128
 2175 0144 000053E3 		cmp	r3, #0
 2176 0148 F5FFFF0A 		beq	.L7
  80:../button.c   **** 
  81:../button.c   **** 	//Borramos EXTINTPND ambas líneas EINT7 y EINT6
  82:../button.c   **** 	// Ponemos a 1´s los bits de EXTINTPND3(EINT7) y EXTINTPND2(EINT6)
  83:../button.c   **** 	rEXTINTPND = 0xC;
 2177              		.loc 1 83 0 is_stmt 1
 2178 014c 24309FE5 		ldr	r3, .L9+4
 2179 0150 0C20A0E3 		mov	r2, #12
 2180 0154 002083E5 		str	r2, [r3, #0]
  84:../button.c   **** 
  85:../button.c   **** 	//Borramos INTPND usando ISPC
  86:../button.c   **** 	rI_ISPC = BIT_EINT4567;
 2181              		.loc 1 86 0
 2182 0158 1C309FE5 		ldr	r3, .L9+8
 2183 015c 0226A0E3 		mov	r2, #2097152
 2184 0160 002083E5 		str	r2, [r3, #0]
  87:../button.c   **** 
  88:../button.c   **** }
 2185              		.loc 1 88 0
 2186 0164 1CD04BE2 		sub	sp, fp, #28
 2187 0168 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2188 016c 04C09DE4 		ldmfd	sp!, {ip}
 2189 0170 04F05EE2 		subs	pc, lr, #4
 2190              	.L10:
 2191              		.align	2
 2192              	.L9:
 2193 0174 4400D201 		.word	30539844
 2194 0178 5400D201 		.word	30539860
 2195 017c 2400E001 		.word	31457316
 2196              		.cfi_endproc
 2197              	.LFE1:
 2199              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2023   .bss:00000000 symbol
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2020   .bss:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2026   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2029   .text:00000000 Eint4567_init
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2097   .text:0000009c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2114   .text:000000c8 Eint4567_ISR
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2111   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccMQYyZZ.s:2193   .text:00000174 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
Uart1_SendByte
